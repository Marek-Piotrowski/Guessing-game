// <auto-generated />
using Guessing_Game.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Guessing_Game.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220525165321_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Guessing_Game.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            City = "Liverpool",
                            Name = "Joe",
                            PhoneNumber = "700-309-341"
                        },
                        new
                        {
                            PersonId = 2,
                            City = "Stockholm",
                            Name = "Josef",
                            PhoneNumber = "763-385-323"
                        },
                        new
                        {
                            PersonId = 3,
                            City = "Warszawa",
                            Name = "Gilbert",
                            PhoneNumber = "774-375-333"
                        },
                        new
                        {
                            PersonId = 4,
                            City = "Barcelona",
                            Name = "Brad",
                            PhoneNumber = "775-346-312"
                        },
                        new
                        {
                            PersonId = 5,
                            City = "Los Angeles",
                            Name = "Luka",
                            PhoneNumber = "775-314-347"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
